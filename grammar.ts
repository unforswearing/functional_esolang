const language_grammar: { [key: string]: RegExp } = {
  WHITESPACE: /(\s+)/im,
  NEWLINE: /\n+/im,
  STRING: /\"([a-zA-Z]|\s|\d)+"/im,
  BAREWORD: /(?<!")([a-zA-Z]|\s|\d)+/im,
  BLOCK_START: /\({/im,
  BLOCK_END: /}\)/im,
  FUNCTION: /function/im,
  FUNCTION_NO_ARGS: /\(\)/im,
  // FUNCTION_ARG_VALUES: /\([a-zA-Z0-9](,)?([a-zA-Z0-9])?\)/,
  FUNCTION_ARG_START: /\(/im,
  FUNCTION_ARG_SEP: /,/im,
  FUNCTION_ARG_END: /\)/im,
  LOOP: /loop/im,
  WHILE: /while/im,
  FOR: /for/im,
  IF: /if/im,
  IF_ELSE: /if_else/im,
  PRINT: /print/im,
  PRINTF: /printf/im,
  OPERATOR_PRINTF: /%s/im,
  OPERATOR_MATH: /(\+|\-|\*|\/|<|>|<=|>=|%|\^)/im,
  SET: /set/im,
  REM: /rem/im,
  TRUE: /true/im,
  FALSE: /false/im,
  NUMBER: /[0-9]+/im,
  EQUALS: /equal/im,
  NOT_EQUALS: /not_equals/im,
  LESS_THAN: /less_than/im,
  LESS_OR_EQUALS: /less_or_equals/im,
  GREATER_THAN: /greater_than/im,
  GREATER_OR_EQUALS: /greater_or_equals/im,
  NOP: /nop/im,
};

export default language_grammar;
